import  { useEffect, useState, type JSX } from "react";
import "./App.css";

type Question = {
  id: number;
  text: string;
  options: string[];
  answer: number;
};

// ุฃุณุฆูุฉ ููู ูุณุชูู
const levels: Question[][] = [
  // Level 1
  [
    { id: 1, text: "ูู ูู ุฎุงุชู ุงูุฃูุจูุงุกุ", options: ["ุนูุณู", "ูุญูุฏ ๏ทบ", "ุฅุจุฑุงููู", "ููุญ"], answer: 1 },
    { id: 2, text: "ูู ุนุฏุฏ ุฃุฑูุงู ุงูุฅุณูุงูุ", options: ["3", "4", "5", "6"], answer: 2 },
    { id: 3, text: "ูู ุนุฏุฏ ุฃุฑูุงู ุงูุฅููุงูุ", options: ["4", "5", "6", "7"], answer: 2 },
    { id: 4, text: "ูุง ูู ุฃูู ูุณุฌุฏ ุจููู ูู ุงูุฅุณูุงูุ", options: ["ุงููุณุฌุฏ ุงูุญุฑุงู", "ุงููุณุฌุฏ ุงูุฃูุตู", "ูุณุฌุฏ ูุจุงุก", "ุงููุณุฌุฏ ุงููุจูู"], answer: 2 },
    { id: 5, text: "ูู ุฃู ุดูุฑ ูุตูู ุงููุณููููุ", options: ["ุฑูุถุงู", "ุดูุงู", "ุฐู ุงูุญุฌุฉ", "ูุญุฑู"], answer: 0 },
    { id: 6, text: "ูู ุนุฏุฏ ุงูุตููุงุช ุงูููุฑูุถุฉ ูู ุงููููุ", options: ["3", "4", "5", "6"], answer: 2 },
    { id: 7, text: "ูุง ูู ุฃุทูู ุณูุฑุฉ ูู ุงููุฑุขูุ", options: ["ุงูุจูุฑุฉ", "ุขู ุนูุฑุงู", "ุงููุณุงุก", "ุงููุงุชุญุฉ"], answer: 0 },
    { id: 8, text: "ูุง ุงุณู ูุงูุฏุฉ ุงููุจู ูุญูุฏ ๏ทบุ", options: ["ุฎุฏูุฌุฉ", "ุขููุฉ", "ูุงุทูุฉ", "ูุงุฌุฑ"], answer: 1 },
    { id: 9, text: "ูู ุฃู ูุฏููุฉ ูููุฏ ุงููุจู ๏ทบุ", options: ["ุงููุฏููุฉ", "ููุฉ", "ุงูุทุงุฆู", "ุจุฏุฑ"], answer: 1 },
    { id: 10, text: "ูู ูุฑุฉ ุฐููุฑ ุงุณู 'ูุญูุฏ' ูู ุงููุฑุขูุ", options: ["2", "3", "4", "5"], answer: 2 },
    { id: 11, text: "ูุง ูู ูููุฉ ุงูุฏุฎูู ูููุณุฌุฏุ", options: ["ุจุณู ุงููู", "ุงูููู ุงูุชุญ ูู ุฃุจูุงุจ ุฑุญูุชู", "ุณุจุญุงู ุงููู", "ูุง ุฅูู ุฅูุง ุงููู"], answer: 1 },
    { id: 12, text: "ูู ุนุฏุฏ ุฃูุงู ุดูุฑ ุฑูุถุงู ุนุงุฏุฉุ", options: ["29 ุฃู 30", "28", "31", "27"], answer: 0 },
    { id: 13, text: "ูุง ุงูุฑูู ุงูุฑุงุจุน ูู ุฃุฑูุงู ุงูุฅุณูุงูุ", options: ["ุงูุตูุงุฉ", "ุงูุฒูุงุฉ", "ุงูุตูู", "ุงูุดูุงุฏุฉ"], answer: 2 },
    { id: 14, text: "ูุง ุงูุณูุฑุฉ ุงูุชู ุชูุณูู 'ููุจ ุงููุฑุขู'ุ", options: ["ุงูููู", "ูุณ", "ุงูุฑุญูู", "ุงููุงุชุญุฉ"], answer: 1 },
    { id: 15, text: "ูู ูู ุฃูู ุงูุฎููุงุก ุงูุฑุงุดุฏููุ", options: ["ุนูุฑ", "ุนูู", "ุนุซูุงู", "ุฃุจู ุจูุฑ"], answer: 3 },
    { id: 16, text: "ูู ุนุฏุฏ ุขูุงุช ุณูุฑุฉ ุงููุงุชุญุฉุ", options: ["5", "6", "7", "8"], answer: 2 },
    { id: 17, text: "ูุง ุงุณู ูููุฉ ูุฒูู ุงููุฑุขูุ", options: ["ูููุฉ ุงููุฏุฑ", "ูููุฉ ุงููุนุฑุงุฌ", "ุงููุตู ูู ุดุนุจุงู", "ูููุฉ ุงูุฅุณุฑุงุก"], answer: 0 },
    { id: 18, text: "ูู ุฃู ููู ุชูุคุฏู ุตูุงุฉ ุงูุฌูุนุฉุ", options: ["ุงูุฎููุณ", "ุงูุฌูุนุฉ", "ุงูุณุจุช", "ุงูุฃุญุฏ"], answer: 1 },
    { id: 19, text: "ูู ุนุฏุฏ ุณูุฑ ุงููุฑุขู ุงููุฑููุ", options: ["112", "113", "114", "115"], answer: 2 },
    { id: 20, text: "ูุง ุฃูู ุณูุฑุฉ ูู ุงููุตุญูุ", options: ["ุงูุจูุฑุฉ", "ุงููุงุชุญุฉ", "ุขู ุนูุฑุงู", "ุงููุงุณ"], answer: 1 },
  ],

  // Level 2
  [
    { id: 1, text: "ูู ูุงู ุนูุฑ ุงููุจู ๏ทบ ุนูุฏ ููุงุชูุ", options: ["60", "61", "62", "63"], answer: 3 },
    { id: 2, text: "ูู ูู ุงูุตุญุงุจู ุงูุฐู ุจุดุฑู ุงููุจู ุจุงูุฌูุฉ ููู ุญูุ", options: ["ุนูุฑ", "ุจูุงู", "ุนุซูุงู", "ุทูุญุฉ"], answer: 1 },
    { id: 3, text: "ูู ุนุฏุฏ ุงูุบุฒูุงุช ุงูุชู ุดุงุฑู ูููุง ุงููุจู ๏ทบุ", options: ["19", "23", "25", "27"], answer: 3 },
    { id: 4, text: "ูู ุฃู ุนุงู ูุงุฌุฑ ุงููุจู ๏ทบ ุฅูู ุงููุฏููุฉุ", options: ["610ู", "622ู", "630ู", "632ู"], answer: 1 },
    { id: 5, text: "ูุง ุงูุณูุฑุฉ ุงูุชู ุชุจุฏุฃ ุจูููุฉ (ูุฏ)ุ", options: ["ุงูุฑุญูู", "ุงููุฌุงุฏูุฉ", "ุงููุคูููู", "ุงูููุชุญูุฉ"], answer: 2 },
    { id: 6, text: "ูู ุนุฏุฏ ุฃุณูุงุก ุงููู ุงูุญุณููุ", options: ["99", "100", "97", "90"], answer: 0 },
    { id: 7, text: "ูู ูู ุฃูู ูู ุฃุณูู ูู ุงูุตุจูุงูุ", options: ["ุนูู ุจู ุฃุจู ุทุงูุจ", "ุฒูุฏ", "ุจูุงู", "ุนุซูุงู"], answer: 0 },
    { id: 8, text: "ูุง ูู ุงูุณูุฑุฉ ุงูุชู ูุง ุชุจุฏุฃ ุจุงูุจุณููุฉุ", options: ["ุงูุชูุจุฉ", "ุงูุฃููุงู", "ุงูุฌูุนุฉ", "ุงูุฅุฎูุงุต"], answer: 0 },
    { id: 9, text: "ูู ุณูุฉ ุงุณุชูุฑ ุงููุญู ุนูู ุงููุจู ๏ทบุ", options: ["20", "21", "22", "23"], answer: 3 },
    { id: 10, text: "ูู ุฃู ูููุฉ ุฃูุณุฑู ุจุงููุจู ๏ทบุ", options: ["ูููุฉ ุงููุฏุฑ", "ูููุฉ ุงููุนุฑุงุฌ", "ูููุฉ ุงูุฅุณุฑุงุก", "ูููุฉ ุงูุฌูุนุฉ"], answer: 2 },
  ],

  // Level 3
  [
    { id: 1, text: "ูู ุนุฏุฏ ุณูุฑ ุงููุฏููุฉุ", options: ["5", "6", "7", "8"], answer: 2 },
    { id: 2, text: "ูู ุงูุฐู ุฌูุน ุงููุฑุขู ูู ูุตุญู ูุงุญุฏุ", options: ["ุฃุจู ุจูุฑ", "ุนูุฑ", "ุนุซูุงู", "ุนูู"], answer: 2 },
    { id: 3, text: "ูู ูู ุงูููู ุงููููู ุจูุฒูู ุงููุทุฑุ", options: ["ูุงูู", "ุฅุณุฑุงููู", "ุฌุจุฑูู", "ูููุงุฆูู"], answer: 3 },
  ],

  // Level 4
  [
    { id: 1, text: "ูู ุนุฏุฏ ุฑูุนุงุช ุตูุงุฉ ุงููููุ", options: ["8", "11", "13", "20"], answer: 1 },
    { id: 2, text: "ูุง ุงุณู ุงูุตุญุงุจู ุงูุฐู ุฌูุน ุงููุฑุขู ุจุนุฏ ููุงุฉ ุงููุจู ๏ทบุ", options: ["ุฃุจู ุจูุฑ", "ุนูุฑ", "ุนุซูุงู", "ุฒูุฏ"], answer: 2 },
  ],

  // Level 5
  [
    { id: 1, text: "ูู ูุงู ููู ุงูุญุจุดุฉ ุนูุฏูุง ูุงุฌุฑ ุงููุณูููู ุฅูููุงุ", options: ["ุงูููุฐุฑ", "ุงููุฌุงุดู", "ูุฑูู", "ุงููุฃููู"], answer: 1 },
    { id: 2, text: "ูู ุนุฏุฏ ุฃูุงู ุงูุญุฌุ", options: ["3", "4", "5", "6"], answer: 2 },
  ],
];

// ุนุฏุฏ ุงูุฅุฌุงุจุงุช ุงููุทููุจุฉ ูุงุฌุชูุงุฒ ูู ูุณุชูู
const passMarks = [16, 8, 3, 2, 2];

function shuffle<T>(arr: T[]): T[] {
  const a = [...arr];
  for (let i = a.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [a[i], a[j]] = [a[j], a[i]];
  }
  return a;
}

export default function App(): JSX.Element {
  const [level, setLevel] = useState<number>(1);
  const [questions, setQuestions] = useState<Question[]>([]);
  const [answers, setAnswers] = useState<Array<number | null>>([]);
  const [result, setResult] = useState<{ correct: number; incorrect: number } | null>(null);
  const [canProceed, setCanProceed] = useState(false);

  useEffect(() => {
    const qs = shuffle(levels[level - 1]);
    setQuestions(qs);
    setAnswers(Array(qs.length).fill(null));
    setResult(null);
    setCanProceed(false);
  }, [level]);

  function handleSelect(i: number, oi: number) {
    const next = [...answers];
    next[i] = oi;
    setAnswers(next);
  }

  function handleSubmit() {
    if (answers.some((a) => a === null)) {
      alert("ุงูุฑุฌุงุก ุงูุฅุฌุงุจุฉ ุนูู ุฌููุน ุงูุฃุณุฆูุฉ ุฃููุงู.");
      return;
    }

    let correct = 0;
    questions.forEach((q, i) => {
      if (answers[i] === q.answer) correct++;
    });

    setResult({ correct, incorrect: questions.length - correct });

    // ุชุญูู ูู ุฅููุงููุฉ ุงูุงูุชูุงู ูููุณุชูู ุงูุชุงูู
    if (correct >= passMarks[level - 1] && level < 5) {
      setCanProceed(true);
    }
  }

  function handleNextLevel() {
    setLevel(level + 1);
  }

  function handleReset() {
    const qs = shuffle(levels[level - 1]);
    setQuestions(qs);
    setAnswers(Array(qs.length).fill(null));
    setResult(null);
    setCanProceed(false);
  }

  return (
    <div className="quiz-root" dir="rtl">
      <h1>๐ ุงููุณุชูู {level} - ุงุฎุชุจุงุฑ ูู ุงูุฏูู ุงูุฅุณูุงูู</h1>

      <form onSubmit={(e) => e.preventDefault()}>
        {questions.map((q, i) => (
          <fieldset className="question" key={q.id}>
            <legend>{i + 1}. {q.text}</legend>
            <div className="options">
              {q.options.map((opt, oi) => {
                const isChecked = answers[i] === oi;
                const showResult = result !== null;
                const isCorrect = oi === q.answer;
                const isWrong = showResult && isChecked && !isCorrect;
                const className = showResult
                  ? isCorrect
                    ? "option correct"
                    : isWrong
                    ? "option incorrect"
                    : "option"
                  : "option";
                return (
                  <label key={oi} className={className}>
                    <input
                      type="radio"
                      name={`q-${q.id}`}
                      checked={isChecked}
                      onChange={() => handleSelect(i, oi)}
                    />
                    <span>{opt}</span>
                  </label>
                );
              })}
            </div>
          </fieldset>
        ))}

        <div className="controls">
          {!canProceed && <button className="submit" onClick={handleSubmit}>ุนุฑุถ ุงููุชูุฌุฉ</button>}
          {canProceed && <button className="submit" onClick={handleNextLevel}>โฌ๏ธ ุงูุงูุชูุงู ูููุณุชูู ุงูุชุงูู</button>}
          <button className="reset" onClick={handleReset}>ุฅุนุงุฏุฉ</button>
        </div>
      </form>

      {result && (
        <div className="result">
          <p>โ ุงูุตุญูุญุฉ: {result.correct}</p>
          <p>โ ุงูุฎุงุทุฆุฉ: {result.incorrect}</p>
          {level < 5 && result.correct < passMarks[level - 1] &&
            <p>โ ุชุญุชุงุฌ ุนูู ุงูุฃูู {passMarks[level - 1]} ุฅุฌุงุจุฉ ุตุญูุญุฉ ููุงูุชูุงู ูููุณุชูู ุงูุชุงูู.</p>}
          {level === 5 && <p>๐ ุชูุงูููุง! ููุฏ ุฃูููุช ุฌููุน ุงููุณุชููุงุช!</p>}
        </div>
      )}
    </div>
  );
}
